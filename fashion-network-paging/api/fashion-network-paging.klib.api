// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <com.aiuta:fashion-network-paging>
final enum class com.aiuta.fashionsdk.network.paging.models/PaginationDirection : kotlin/Enum<com.aiuta.fashionsdk.network.paging.models/PaginationDirection> { // com.aiuta.fashionsdk.network.paging.models/PaginationDirection|null[0]
    enum entry AFTER // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.AFTER|null[0]
    enum entry BEFORE // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.BEFORE|null[0]

    final val entries // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<com.aiuta.fashionsdk.network.paging.models/PaginationDirection> // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.entries.<get-entries>|<get-entries>#static(){}[0]
    final val httpQueryKey // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.httpQueryKey|{}httpQueryKey[0]
        final fun <get-httpQueryKey>(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.httpQueryKey.<get-httpQueryKey>|<get-httpQueryKey>(){}[0]

    final fun valueOf(kotlin/String): com.aiuta.fashionsdk.network.paging.models/PaginationDirection // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<com.aiuta.fashionsdk.network.paging.models/PaginationDirection> // com.aiuta.fashionsdk.network.paging.models/PaginationDirection.values|values#static(){}[0]
}

final class <#A: kotlin/Any> com.aiuta.fashionsdk.network.paging/ContainerPagingSource : androidx.paging/PagingSource<com.aiuta.fashionsdk.network.paging.models/PaginationOffset, #A> { // com.aiuta.fashionsdk.network.paging/ContainerPagingSource|null[0]
    constructor <init>(kotlin.coroutines/SuspendFunction1<com.aiuta.fashionsdk.network.paging.models/PaginationOffset?, com.aiuta.fashionsdk.network.paging.models/PageContainer<#A>>) // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.<init>|<init>(kotlin.coroutines.SuspendFunction1<com.aiuta.fashionsdk.network.paging.models.PaginationOffset?,com.aiuta.fashionsdk.network.paging.models.PageContainer<1:0>>){}[0]

    final fun getRefreshKey(androidx.paging/PagingState<com.aiuta.fashionsdk.network.paging.models/PaginationOffset, #A>): com.aiuta.fashionsdk.network.paging.models/PaginationOffset? // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.getRefreshKey|getRefreshKey(androidx.paging.PagingState<com.aiuta.fashionsdk.network.paging.models.PaginationOffset,1:0>){}[0]
    final suspend fun load(androidx.paging/PagingSource.LoadParams<com.aiuta.fashionsdk.network.paging.models/PaginationOffset>): androidx.paging/PagingSource.LoadResult<com.aiuta.fashionsdk.network.paging.models/PaginationOffset, #A> // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.load|load(androidx.paging.PagingSource.LoadParams<com.aiuta.fashionsdk.network.paging.models.PaginationOffset>){}[0]

    final object Companion { // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.Companion|null[0]
        final const val DEFAULT_PAGE_SIZE // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.Companion.DEFAULT_PAGE_SIZE|{}DEFAULT_PAGE_SIZE[0]
            final fun <get-DEFAULT_PAGE_SIZE>(): kotlin/Int // com.aiuta.fashionsdk.network.paging/ContainerPagingSource.Companion.DEFAULT_PAGE_SIZE.<get-DEFAULT_PAGE_SIZE>|<get-DEFAULT_PAGE_SIZE>(){}[0]
    }
}

final class <#A: kotlin/Any?> com.aiuta.fashionsdk.network.paging.models/PageContainer { // com.aiuta.fashionsdk.network.paging.models/PageContainer|null[0]
    constructor <init>(kotlin.collections/List<#A>, kotlin/String, kotlin/String, kotlin.collections/List<kotlin/String>) // com.aiuta.fashionsdk.network.paging.models/PageContainer.<init>|<init>(kotlin.collections.List<1:0>;kotlin.String;kotlin.String;kotlin.collections.List<kotlin.String>){}[0]

    final val errors // com.aiuta.fashionsdk.network.paging.models/PageContainer.errors|{}errors[0]
        final fun <get-errors>(): kotlin.collections/List<kotlin/String> // com.aiuta.fashionsdk.network.paging.models/PageContainer.errors.<get-errors>|<get-errors>(){}[0]
    final val result // com.aiuta.fashionsdk.network.paging.models/PageContainer.result|{}result[0]
        final fun <get-result>(): kotlin.collections/List<#A> // com.aiuta.fashionsdk.network.paging.models/PageContainer.result.<get-result>|<get-result>(){}[0]

    final var afterKey // com.aiuta.fashionsdk.network.paging.models/PageContainer.afterKey|{}afterKey[0]
        final fun <get-afterKey>(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PageContainer.afterKey.<get-afterKey>|<get-afterKey>(){}[0]
        final fun <set-afterKey>(kotlin/String) // com.aiuta.fashionsdk.network.paging.models/PageContainer.afterKey.<set-afterKey>|<set-afterKey>(kotlin.String){}[0]
    final var beforeKey // com.aiuta.fashionsdk.network.paging.models/PageContainer.beforeKey|{}beforeKey[0]
        final fun <get-beforeKey>(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PageContainer.beforeKey.<get-beforeKey>|<get-beforeKey>(){}[0]
        final fun <set-beforeKey>(kotlin/String) // com.aiuta.fashionsdk.network.paging.models/PageContainer.beforeKey.<set-beforeKey>|<set-beforeKey>(kotlin.String){}[0]

    final fun component1(): kotlin.collections/List<#A> // com.aiuta.fashionsdk.network.paging.models/PageContainer.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PageContainer.component2|component2(){}[0]
    final fun component3(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PageContainer.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<kotlin/String> // com.aiuta.fashionsdk.network.paging.models/PageContainer.component4|component4(){}[0]
    final fun copy(kotlin.collections/List<#A> = ..., kotlin/String = ..., kotlin/String = ..., kotlin.collections/List<kotlin/String> = ...): com.aiuta.fashionsdk.network.paging.models/PageContainer<#A> // com.aiuta.fashionsdk.network.paging.models/PageContainer.copy|copy(kotlin.collections.List<1:0>;kotlin.String;kotlin.String;kotlin.collections.List<kotlin.String>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.aiuta.fashionsdk.network.paging.models/PageContainer.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.aiuta.fashionsdk.network.paging.models/PageContainer.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PageContainer.toString|toString(){}[0]

    final class <#A1: kotlin/Any?> $serializer : kotlinx.serialization.internal/GeneratedSerializer<com.aiuta.fashionsdk.network.paging.models/PageContainer<#A1>> { // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer|null[0]
        constructor <init>(kotlinx.serialization/KSerializer<#A1>) // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.<init>|<init>(kotlinx.serialization.KSerializer<1:0>){}[0]

        final val descriptor // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.descriptor|{}descriptor[0]
            final fun <get-descriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
        final val typeSerial0 // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.typeSerial0|{}typeSerial0[0]

        final fun childSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.childSerializers|childSerializers(){}[0]
        final fun deserialize(kotlinx.serialization.encoding/Decoder): com.aiuta.fashionsdk.network.paging.models/PageContainer<#A1> // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.deserialize|deserialize(kotlinx.serialization.encoding.Decoder){}[0]
        final fun serialize(kotlinx.serialization.encoding/Encoder, com.aiuta.fashionsdk.network.paging.models/PageContainer<#A1>) // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.serialize|serialize(kotlinx.serialization.encoding.Encoder;com.aiuta.fashionsdk.network.paging.models.PageContainer<1:0>){}[0]
        final fun typeParametersSerializers(): kotlin/Array<kotlinx.serialization/KSerializer<*>> // com.aiuta.fashionsdk.network.paging.models/PageContainer.$serializer.typeParametersSerializers|typeParametersSerializers(){}[0]
    }

    final object Companion : kotlinx.serialization.internal/SerializerFactory { // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion|null[0]
        final val $cachedDescriptor // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion.$cachedDescriptor|{}$cachedDescriptor[0]
            final fun <get-$cachedDescriptor>(): kotlinx.serialization.descriptors/SerialDescriptor // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion.$cachedDescriptor.<get-$cachedDescriptor>|<get-$cachedDescriptor>(){}[0]
        final val $childSerializers // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion.$childSerializers|{}$childSerializers[0]

        final fun <#A2: kotlin/Any?> serializer(kotlinx.serialization/KSerializer<#A2>): kotlinx.serialization/KSerializer<com.aiuta.fashionsdk.network.paging.models/PageContainer<#A2>> // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion.serializer|serializer(kotlinx.serialization.KSerializer<0:0>){0ยง<kotlin.Any?>}[0]
        final fun serializer(kotlin/Array<out kotlinx.serialization/KSerializer<*>>...): kotlinx.serialization/KSerializer<*> // com.aiuta.fashionsdk.network.paging.models/PageContainer.Companion.serializer|serializer(kotlin.Array<out|kotlinx.serialization.KSerializer<*>>...){}[0]
    }
}

final class com.aiuta.fashionsdk.network.paging.models/PaginationOffset { // com.aiuta.fashionsdk.network.paging.models/PaginationOffset|null[0]
    constructor <init>(com.aiuta.fashionsdk.network.paging.models/PaginationDirection, kotlin/String) // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.<init>|<init>(com.aiuta.fashionsdk.network.paging.models.PaginationDirection;kotlin.String){}[0]

    final val direction // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.direction|{}direction[0]
        final fun <get-direction>(): com.aiuta.fashionsdk.network.paging.models/PaginationDirection // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.direction.<get-direction>|<get-direction>(){}[0]
    final val key // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.key|{}key[0]
        final fun <get-key>(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.key.<get-key>|<get-key>(){}[0]

    final fun component1(): com.aiuta.fashionsdk.network.paging.models/PaginationDirection // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.component1|component1(){}[0]
    final fun component2(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.component2|component2(){}[0]
    final fun copy(com.aiuta.fashionsdk.network.paging.models/PaginationDirection = ..., kotlin/String = ...): com.aiuta.fashionsdk.network.paging.models/PaginationOffset // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.copy|copy(com.aiuta.fashionsdk.network.paging.models.PaginationDirection;kotlin.String){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // com.aiuta.fashionsdk.network.paging.models/PaginationOffset.toString|toString(){}[0]
}

final fun (io.ktor.http/URLBuilder).com.aiuta.fashionsdk.network.paging.utils/saveAppend(com.aiuta.fashionsdk.network.paging.models/PaginationOffset?) // com.aiuta.fashionsdk.network.paging.utils/saveAppend|saveAppend@io.ktor.http.URLBuilder(com.aiuta.fashionsdk.network.paging.models.PaginationOffset?){}[0]
